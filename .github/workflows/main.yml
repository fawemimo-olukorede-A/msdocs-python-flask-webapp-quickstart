name: Deploy Infrastructure and Application to Azure
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  AZURE_RESOURCE_GROUP: Akscluster-rsg
  LOCATION: uk south
  BICEP_FILE_PATH: ./kubernetes/main.bicep
  DOCKER_IMAGE_NAME: your-app-name
  DOCKER_FILE_PATH: Dockerfile
  ACR_NAME: GTAzureContainerRegistry
  AKS_CLUSTER_NAME: GT-AKSCluster  # Add this line with your AKS cluster name

jobs:
  deploy-infrastructure:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      
      - name: Deploy Bicep file
        uses: azure/arm-deploy@v1
        with:
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ env.AZURE_RESOURCE_GROUP }}
          template: ${{ env.BICEP_FILE_PATH }}
          failOnStdErr: false

  build-and-push:
    runs-on: ubuntu-latest
    needs: deploy-infrastructure
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: |
          az acr login --name ${{ env.ACR_NAME }}
        
      - name: Build and push Docker image
        run: |
          ACR_LOGIN_SERVER=$(az acr show --name ${{ env.ACR_NAME }} --query loginServer --output tsv)
          docker build -t ${ACR_LOGIN_SERVER}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }} -f ${{ env.DOCKER_FILE_PATH }} .
          docker push ${ACR_LOGIN_SERVER}/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}
        
      - name: Set AKS context
        uses: azure/aks-set-context@v3
        with:
          resource-group: ${{ env.AZURE_RESOURCE_GROUP }}
          cluster-name: ${{ env.AKS_CLUSTER_NAME }}
        
      - name: Update Kubernetes manifests
        run: |
          ACR_LOGIN_SERVER=$(az acr show --name ${{ env.ACR_NAME }} --query loginServer --output tsv)
          sed -i 's|{{IMAGE_NAME}}|'${ACR_LOGIN_SERVER}'/${{ env.DOCKER_IMAGE_NAME }}:${{ github.sha }}|g' kubernetes/deployment.yaml
        
      - name: Deploy to AKS
        uses: azure/k8s-deploy@v4
        with:
          manifests: |
            kubernetes/deployment.yaml
            kubernetes/service.yaml
          namespace: default
      
